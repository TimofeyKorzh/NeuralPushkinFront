{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tkorg\\\\Projects\\\\neuralpushkin\\\\neuralpushkinfront\\\\src\\\\App.js\";\nimport { TextField } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport Button from './components/Button';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport './styles.scss';\nimport { postGenerateTextEndpoint } from './utils';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { YMInitializer } from 'react-yandex-metrika';\nconst TITLE = 'Neural Pushkin';\n\nfunction App() {\n  const [toggle, setToggle] = useState(false);\n  const [text, setText] = useState(\"Заходит Пушкин в магазин купить шляпу, а она ему\"); // установка текста по умолчанию\n\n  const [temperature, setTemperature] = useState(0.1); //установка температуры по умолча\n\n  const [generatedText, postGenerateText] = postGenerateTextEndpoint();\n  const useStyles = makeStyles({\n    root: {\n      width: 300\n    }\n  });\n\n  const handleChange = event => {\n    setText(event.target.value); //обновление текста\n  };\n\n  useEffect(() => {\n    document.title = TITLE;\n  }, []);\n  const THEME = createMuiTheme({\n    typography: {\n      \"fontFamily\": `\"MinionPro\", sans-serif`,\n      \"fontSize\": 14,\n      \"fontWeightLight\": 300,\n      \"fontWeightRegular\": 400,\n      \"fontWeightMedium\": 500\n    }\n  });\n\n  const generateText = () => {\n    generatedText.complete = false;\n    postGenerateText({\n      text,\n      temperature\n    });\n    setToggle(false);\n  };\n\n  if (generatedText.complete && !generatedText.error && !toggle) {\n    setText(generatedText.data.text);\n    setToggle(true); // обновление текста при получение ответа от сервера\n  }\n\n  function valuetext(value) {\n    setTemperature(value); //установка температуры со слайдера\n  }\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: THEME,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(YMInitializer, {\n    accounts: [83274316],\n    options: {\n      webvisor: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centering\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Neural Pushkin\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"npushkin2.jpg\",\n    width: \"250\",\n    height: \"250\",\n    alt: \"Neural Pushkin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"\\u041C\\u044B \\u0432\\u044B\\u0448\\u043B\\u0438 \\u0432 \\u0441\\u0442\\u0430\\u0434\\u0438\\u044E \\u043E\\u0442\\u043A\\u0440\\u044B\\u0442\\u043E\\u0433\\u043E \\u0431\\u0435\\u0442\\u0430-\\u0442\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F!\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 56\n    }\n  }), \" \\u041D\\u0430\\u0447\\u043D\\u0438\\u0442\\u0435 \\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u043D\\u0438\\u0436\\u0435, \\u0430 \\u043D\\u0435\\u0439\\u0440\\u043E\\u0441\\u0435\\u0442\\u044C \\u043F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442...\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"\\u0421\\u0431\\u043E\\u0440 \\u0441\\u0440\\u0435\\u0434\\u0441\\u0442\\u0432 \\u043D\\u0430 \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.tinkoff.ru/sl/6Nv1r2nsuiQ\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 26\n    }\n  }, \"\\u043B\\u0443\\u0447\\u0448\\u0438\\u0435 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430\"), \" \\u0434\\u043B\\u044F \\u041F\\u0443\\u0448\\u043A\\u0438\\u043D\\u0430\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"!\\u0412\\u041D\\u0418\\u041C\\u0410\\u041D\\u0418\\u0415! \\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440 \\u043D\\u0430\\u0445\\u043E\\u0434\\u0438\\u0442\\u0441\\u044F \\u043F\\u043E\\u0434 \\u0438\\u043D\\u0442\\u0435\\u043D\\u0441\\u0438\\u0432\\u043D\\u043E\\u0439 \\u043D\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u043E\\u0439 \\u0438 \\u0433\\u0435\\u043D\\u0435\\u0440\\u0430\\u0446\\u0438\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0434\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F \\u0432\\u043F\\u043B\\u043E\\u0442\\u044C \\u0434\\u043E \\u0447\\u0430\\u0441\\u0430!\"), /*#__PURE__*/React.createElement(Typography, {\n    id: \"discrete-slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \" \\u0423\\u0440\\u043E\\u0432\\u0435\\u043D\\u044C \\u043A\\u0440\\u0435\\u0430\\u0442\\u0438\\u0432\\u043D\\u043E\\u0441\\u0442\\u0438 \"), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 0.1,\n    getAriaValueText: valuetext,\n    \"aria-labelledby\": \"discrete-slider\",\n    valueLabelDisplay: \"auto\",\n    step: 0.1,\n    marks: true,\n    min: 0.1,\n    max: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: \"form textinput\",\n    multiline: true,\n    fullWidth: true,\n    value: text,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: generateText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  })), generatedText.pending && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"\\u041F\\u043E\\u0434\\u043E\\u0436\\u0434\\u0438\\u0442\\u0435!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centering\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"Created by \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://t.me/datapron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }\n  }, \"Alex Wortega\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Front by \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/TimofeyKorzh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"Timofey Korzhebin\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"\\u0411\\u043B\\u0430\\u0433\\u043E\\u0434\\u0430\\u0440\\u0438\\u043C \\u0437\\u0430 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u0443\\u044E \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u043A\\u0443 \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 51\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://t.me/NeuralShit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 60\n    }\n  }, \"NeuralShit\"), \", \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://t.me/denissexy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 110\n    }\n  }, \"DenisSexyIt\"), \", \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://t.me/DeepFaker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 160\n    }\n  }, \"Deepfaker\"), \", \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://t.me/def_model_train\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 208\n    }\n  }, \"Arina Pu\\u0441hkova\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Neural Pushkin in \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://twitter.com/NeuralPushkin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 30\n    }\n  }, \"Twitter\")))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/tkorg/Projects/neuralpushkin/neuralpushkinfront/src/App.js"],"names":["TextField","React","useEffect","useState","Button","MuiThemeProvider","createMuiTheme","postGenerateTextEndpoint","Typography","Slider","makeStyles","YMInitializer","TITLE","App","toggle","setToggle","text","setText","temperature","setTemperature","generatedText","postGenerateText","useStyles","root","width","handleChange","event","target","value","document","title","THEME","typography","generateText","complete","error","data","valuetext","classes","webvisor","pending"],"mappings":"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","sourcesContent":["import { TextField } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Button from './components/Button';\r\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport './styles.scss';\r\nimport { postGenerateTextEndpoint } from './utils';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { YMInitializer } from 'react-yandex-metrika';\r\n\r\nconst TITLE = 'Neural Pushkin';\r\n\r\nfunction App() {\r\n  const [toggle, setToggle] = useState(false);\r\n  const [text, setText] = useState(\"Заходит Пушкин в магазин купить шляпу, а она ему\"); // установка текста по умолчанию\r\n  const [temperature, setTemperature] = useState(0.1);//установка температуры по умолча\r\n  const [generatedText, postGenerateText] = postGenerateTextEndpoint();\r\n\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: 300,\r\n    },\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setText(event.target.value); //обновление текста\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = TITLE;\r\n  }, []);\r\n\r\n  const THEME = createMuiTheme({\r\n    typography: {\r\n     \"fontFamily\": `\"MinionPro\", sans-serif`,\r\n     \"fontSize\": 14,\r\n     \"fontWeightLight\": 300,\r\n     \"fontWeightRegular\": 400,\r\n     \"fontWeightMedium\": 500\r\n    }\r\n  });\r\n\r\n\r\n  const generateText = () => {\r\n    generatedText.complete = false;\r\n    postGenerateText({ text, temperature});\r\n    setToggle(false);\r\n  }\r\n\r\n  if (generatedText.complete && !generatedText.error && !toggle){\r\n    setText(generatedText.data.text);\r\n    setToggle(true);// обновление текста при получение ответа от сервера\r\n  }\r\n\r\n\r\n  function valuetext(value) {\r\n    setTemperature(value); //установка температуры со слайдера\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n  <MuiThemeProvider theme ={THEME}>\r\n  \r\n  <div className='app-container'>\r\n  \r\n      \r\n        \r\n    <YMInitializer accounts={[83274316]} options={{webvisor: true}} />\r\n        \r\n      \r\n      \r\n    <form noValidate autoComplete='off'>\r\n    <div className='centering'></div>\r\n      <h1>Neural Pushkin</h1>\r\n      <img src=\"npushkin2.jpg\" width=\"250\" height=\"250\" alt=\"Neural Pushkin\"></img>\r\n      \r\n      <p>Мы вышли в стадию открытого бета-тестирования!<br></br> Начните писать ниже, а нейросеть продолжит...</p>\r\n      <p>Сбор средств на <a href=\"https://www.tinkoff.ru/sl/6Nv1r2nsuiQ\">лучшие сервера</a> для Пушкина</p>\r\n      <p>!ВНИМАНИЕ! Сейчас сервер находится под интенсивной нагрузкой и генерация может длиться вплоть до часа!</p>\r\n      <Typography id=\"discrete-slider\"  > Уровень креативности </Typography>\r\n      <Slider\r\n        defaultValue={0.1}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={0.1}\r\n        marks\r\n        min={0.1}\r\n        max={2}\r\n      />\r\n      <p></p>\r\n      <TextField className='form textinput' multiline fullWidth value={text} onChange={handleChange} />\r\n      <Button onClick={generateText} />\r\n      \r\n    </form>\r\n\r\n    {generatedText.pending &&\r\n      <div className='result pending'>Подождите!</div>}\r\n\r\n        <div className='centering'> \r\n        <p>Created by <a href=\"https://t.me/datapron\">Alex Wortega</a></p>\r\n        <p>Front by <a href=\"https://github.com/TimofeyKorzh\">Timofey Korzhebin</a></p>\r\n        <p>Благодарим за информационную поддержку <br></br><a href=\"https://t.me/NeuralShit\">NeuralShit</a>, <a href=\"https://t.me/denissexy\">DenisSexyIt</a>, <a href=\"https://t.me/DeepFaker\">Deepfaker</a>, <a href=\"https://t.me/def_model_train\">Arina Puсhkova</a></p>\r\n\r\n        <p>Neural Pushkin in <a href=\"https://twitter.com/NeuralPushkin\">Twitter</a></p>\r\n        </div>\r\n        \r\n  </div>\r\n  </MuiThemeProvider>\r\n);\r\n\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}